@using System.Globalization
@using System.Web.Optimization
@using TekConf.Web
@model TekConf.RemoteData.Dtos.v1.FullConferenceDto
<!--=== Breadcrumbs ===-->
<div class="breadcrumbs margin-bottom-40">
	<div class="container">
		<h1 class="color-green pull-left">@Model.name</h1>
	</div>
	<!--/container-->
</div>
<!--/breadcrumbs-->
<!--=== End Breadcrumbs ===-->
<!--=== Content Part ===-->
<div class="container portfolio-item">
	<div class="row-fluid margin-bottom-20">
		<!-- Carousel -->
		<div class="span7">
			<div id="myCarousel" class="carousel slide">
				<div class="carousel-inner">
					<div class="item active">
						<img src="@Model.imageUrl" alt="" style="width:670px;">
					</div>
				</div>
			</div>
		</div>
		<!--/span7-->
		<!-- //End Tabs and Carousel -->

		<div class="span5">
			<ul class="unstyled">
				<li style="font-size: x-large;"><i class="icon-calendar color-green"></i> @Model.DateRange</li>
				<li style="font-size: x-large;">

					@if (!string.IsNullOrWhiteSpace(Model.location))
					{
						@Model.location<br />
					}
					@if (Model.address != null)
					{
						if (Model.address.StreetNumber != 0)
						{
							@Model.address.StreetNumber<text> </text>
						}
						if (!string.IsNullOrWhiteSpace(Model.address.StreetName))
						{
							@Model.address.StreetName<br />
						}

						@Model.address.City<text> </text>@Model.address.State<text> </text>@Model.address.Country<br />
						<br />
					}
				</li>
			</ul>
			<p>@Model.description</p>
            <p>Last Updated: @Model.lastUpdated.ToShortDateString() </p>
			<ul class="unstyled">
				@*				<li><i class="icon-tags color-green"></i> Call for speakers open</li>
					<li><i class="icon-tags color-green"></i> Registration open</li>*@

				@if (!string.IsNullOrWhiteSpace(Model.homepageUrl))
				{
					<li>
						<img src="~/img/social/website-16x16.png" alt="Website" />
						@HtmlHelpers.SimpleLink(Model.homepageUrl, Model.homepageUrl.Replace("http://", ""))
					</li>
				}
				@if (!string.IsNullOrWhiteSpace(Model.twitterName))
				{
					<li>
						<img src="~/img/social/twitter-16x16.png" alt="Twitter Name" />
						@HtmlHelpers.TwitterUserLink(Model.twitterName)
					</li>
				}
				@if (!string.IsNullOrWhiteSpace(Model.twitterHashTag))
				{
					<li>
						<img src="~/img/social/twitter-16x16.png" alt="Twitter Hashtag" />
						@HtmlHelpers.SimpleLink("https://twitter.com/#!/search/" + Model.twitterHashTag.Replace("#", "%23"), Model.twitterHashTag)
					</li>
				}

				@if (!string.IsNullOrWhiteSpace(Model.facebookUrl))
				{
					<li>
						<img src="~/img/social/facebook-16x16.png" alt="Facebook" />
						@HtmlHelpers.SimpleLink(Model.facebookUrl, "Facebook")
					</li>
				}

				@if (!string.IsNullOrWhiteSpace(Model.lanyrdUrl))
				{
					<li>
						<img src="~/img/social/lanyrd-16x16.png" alt="Lanyrd" />
						@HtmlHelpers.SimpleLink(Model.lanyrdUrl, "Lanyrd")
					</li>
				}

				@if (!string.IsNullOrWhiteSpace(Model.meetupUrl))
				{
					<li>
						<img src="~/img/social/meetup-16x16.png" alt="Meetup" />
						@HtmlHelpers.SimpleLink(Model.meetupUrl, "Meetup")
					</li>
				}

				@if (!string.IsNullOrWhiteSpace(Model.googlePlusUrl))
				{
					<li>
						<img src="~/img/social/googlePlus-16x16.png" alt="Google Plus" />
						@HtmlHelpers.SimpleLink(Model.googlePlusUrl, "Google+")
					</li>
				}

				@if (!string.IsNullOrWhiteSpace(Model.vimeoUrl))
				{
					<li>
						<img src="~/img/social/vimeo-16x16.png" alt="Vimeo" />
						@HtmlHelpers.SimpleLink(Model.vimeoUrl, "Vimeo")
					</li>
				}

				@if (!string.IsNullOrWhiteSpace(Model.youtubeUrl))
				{
					<li>
						<img src="~/img/social/youtube-16x16.png" alt="Youtube" />
						@HtmlHelpers.SimpleLink(Model.youtubeUrl, "YouTube")
					</li>
				}

				@if (!string.IsNullOrWhiteSpace(Model.githubUrl))
				{
					<li>
						<img src="~/img/social/github-16x16.png" alt="GitHub" />
						@HtmlHelpers.SimpleLink(Model.googlePlusUrl, "Github")
					</li>
				}

				@if (!string.IsNullOrWhiteSpace(Model.linkedInUrl))
				{
					<li>
						<img src="~/img/social/linkedin-16x16.png" alt="LinkedIn" />
						@HtmlHelpers.SimpleLink(Model.linkedInUrl, "LinkedIn")
					</li>
				}


			</ul>
			@if (Html.IsAdmin())
			{
				@Html.RouteLink("Edit Conference", "AdminEditConference", new { conferenceSlug = Model.slug }, new { @class = "btn-u btn-info", style = "padding-right:5px;margin-right:5px;margin-bottom:5px;" })
				@Html.RouteLink("Add Session", "AdminAddSession", new { conferenceSlug = Model.slug }, new { @class = "btn-u", style = "margin-bottom:5px;" })
			}


			@if (Request.IsAuthenticated)
			{
				using (Html.BeginForm("Add", "Schedule", FormMethod.Post, new { id = Model.slug + "-form" }))
				{
					Html.AntiForgeryToken();
					@Html.Hidden("conferenceSlug", Model.slug)
					if (!Model.isAddedToSchedule.HasValue || !Model.isAddedToSchedule.Value)
					{
						<p><a href="#" id="addToSchedule" class="btn-u btn-u-large btn-u-green" style="width: 100%;">Add to Schedule</a></p>

					}
				}
			}

		</div>
	</div>
	<!--/row-fluid-->

	<div class="row-fluid margin-bottom-20">

		@if (Model.sessions == null || !Model.sessions.Any())
		{
			<div class="alert alert-block">
				No sessions to display. Either sessions have not been released, or sessions have not been added to TekConf.<br />
				Want to help add sessions? Contact <a href="mailto:robgibbens@arteksoftware.com">RobGibbens@arteksoftware.com</a>
			</div>
		}
		else
		{

			<div class="alert alert-block">
				Note : TekConf is not the definitive list of sessions for this conference. Session details may not be up to date. Please
				check the <a href="@Model.homepageUrl">@Model.name site</a> for up to date information.

			</div>
		}

		@{
			var sessionGroup = Model.sessions
																											.GroupBy(s => new { s.start.Year, s.start.Month, s.start.Day })
																											.Select(s => new { DateKey = s.Key, Sessions = s })
																											.ToList();
		}
		@if (Request.IsAuthenticated)
		{

			<div class="well"><a href="#" id="showHideMySessions">Show/Hide unscheduled sessions</a></div>
		}
		
				@foreach (var subjectList in Model.subjects)
{
	foreach (var subject in subjectList.Split(',').OrderBy(x => x))
	{
		<button type="button" class="btn-u btn-u-blue" style="margin:5px;">@subject</button>
	}
}
		@foreach (var dayGroup in sessionGroup.OrderBy(s => s.DateKey.Year).ThenBy(s => s.DateKey.Month).ThenBy(s => s.DateKey.Day))
		{
			var date = DateTime.Parse(dayGroup.DateKey.Month + "/" + dayGroup.DateKey.Day + "/" + dayGroup.DateKey.Year);
			var tabName = date.ToString("dddd, MMMM d", CultureInfo.CreateSpecificCulture("en-US")).Replace(" ", "").Replace(",", "");
			var dateString = date.ToString("dddd, MMMM d", CultureInfo.CreateSpecificCulture("en-US"));

			<div class="row">
				<div class="span12">
					<h3>
						@dateString
					</h3>
				</div>

				<!-- /span12 -->
				<table class="table table-striped">
					<tbody>
						@{
			var sessionTimes = dayGroup.Sessions
					.GroupBy(s => new { s.start })
					.Select(s => new { DateKey = s.Key, Sessions = s })
					.OrderBy(s => s.DateKey.start)
					.ToList();
						}
						@foreach (var sessionTime in sessionTimes)
						{
							<tr>
								<td colspan="3">
									<h4>@sessionTime.DateKey.start.ToShortTimeString()</h4>
								</td>
							</tr>
							foreach (var session in sessionTime.Sessions.OrderBy(s => s.start.TimeOfDay))
							{

								<tr>
									@if (Request.IsAuthenticated)
									{
										if (session.isAddedToSchedule.HasValue && session.isAddedToSchedule.Value)
										{
											<td class="scheduled" style="width: 20px;">
												<i class="icon-star icon-2x icon-selected" id="remove-@session.slug" onclick="javascript:toggleSessionOnSchedule('@Model.slug', '@session.slug', '#remove-@session.slug')"></i>
											</td>
										}
										else
										{
											<td class="unscheduled" style="width: 20px;">
												<i class="icon-star-empty icon-2x" id="add-@session.slug" onclick="javascript:toggleSessionOnSchedule('@Model.slug', '@session.slug', '#add-@session.slug')"></i>
											</td>
										}
									}

									<td>
										<h5>@Html.RouteLink(session.title, "SessionDetail", new { conferenceSlug = Model.slug, sessionSlug = session.slug }, null)</h5>
										@session.room
									</td>
									<td>
										@foreach (var speaker in session.speakers)
										{
											@Html.RouteLink(speaker.fullName, "SessionSpeakerDetail", new { conferenceSlug = Model.slug, speakerSlug = speaker.slug }, null)<br />
										}
									</td>
								</tr>
							}
						}
					</tbody>
				</table>
			</div>

		}
	</div>

</div>
<!--/container-->
<!--=== End Content Part ===-->
@section scripts {
	changeMenuActive('menuConferences');

	$(function () {
	$("#addToSchedule").on("click", function() {
	$('#addToScheduleForm').submit();
	});
	});

	$(function () {
	$(document).on("click", "#showHideMySessions", function (e) {
	e.preventDefault();

	$('td.unscheduled').parent().toggle();
	});
	});

	function toggleSessionOnSchedule(conferenceSlug, sessionSlug, element) {
	if ($(element).hasClass("icon-star")) {
	removeSessionFromSchedule(conferenceSlug, sessionSlug, element);
	} else if ($(element).hasClass("icon-star-empty")) {
	addSessionToSchedule(conferenceSlug, sessionSlug, element);
	}
	}

	function removeSessionFromSchedule(conferenceSlug, sessionSlug, element) {
	$(element).removeClass("icon-star").removeClass("icon-selected").addClass("icon-exchange");
	$(element).parent().removeClass("scheduled").addClass("unscheduled");

	var jqxhr = $.post("@Url.Action("Delete", "Schedule")", { conferenceSlug: conferenceSlug, sessionSlug: sessionSlug }, function () {
	})
	.done(function () {
	$(element).removeClass("icon-star").removeClass("icon-selected").removeClass("icon-exchange").addClass("icon-star-empty");
	})
	.fail(function () { alert("error"); })
	.always(function () {
	$(element).removeClass("icon-exchange");
	});
	}

	function addSessionToSchedule(conferenceSlug, sessionSlug, element) {
	$(element).removeClass("icon-star-empty").addClass("icon-exchange");
	$(element).parent().removeClass("unscheduled").addClass("scheduled");
	var jqxhr = $.post("@Url.Action("Add", "Schedule")", { conferenceSlug: conferenceSlug, sessionSlug: sessionSlug }, function () {
	})
	.done(function () {
	$(element).removeClass("icon-star-empty").removeClass("icon-exchange").addClass("icon-star").addClass("icon-selected");
	})
	.fail(function () { alert("error"); })
	.always(function () {
	$(element).removeClass("icon-exchange");
	});
	}
}
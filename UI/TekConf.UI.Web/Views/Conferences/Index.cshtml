@using System.Configuration
@using System.Web.Optimization
@using TekConf.UI.Web.Controllers
@model List<TekConf.RemoteData.Dtos.v1.FullConferenceDto>

@{
	Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8">

	<title>Conferences - tekconf</title>
	<link rel="shortcut icon" type="image/x-icon" href="~/favicon.ico">
	<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
	<meta name="apple-mobile-web-app-capable" content="yes">
	<meta name="description" content="Conferences Technical Programming Schedule" />

	<link href="http://fonts.googleapis.com/css?family=Open+Sans:400italic,600italic,400,600" rel="stylesheet">
		<link rel="search" type="application/opensearchdescription+xml" href="http://www.tekconf.com/TekConf.xml" title="TekConf Search" /> 

	@Styles.Render("~/css/conferences/index")
	<style>
		.ui-autocomplete-loading {
			background: white url('images/ui-anim_basic_16x16.gif') right center no-repeat;
		}

		.effect {
			height: 200px;
		}
	</style>
	<!-- Le HTML5 shim, for IE6-8 support of HTML5 elements -->
	<!--[if lt IE 9]>
    <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->

	<!-- API NOTE : This page is generated by calling http://api.tekconf.com/v1/conferences -->

</head>

<body>
	@Html.Partial("Header")

	<div id="subheader">
		<div class="inner">
			<div class="container">
				<h1>Conferences</h1>
			</div>
			<!-- /.container -->
		</div>
		<!-- /inner -->
	</div>
	<!-- /subheader -->

	<div id="subpage">
		<div class="container">
			<div class="row">
				<i class="icon-search"></i><a href="#" id="showFilter">Show/Hide Filter and Search</a>
			</div>
			<div class="row well" id="filter" style="padding-bottom: 10px;">
				@using (Html.BeginForm("Index", "Conferences", FormMethod.Get, new { @class = "form-horizontal" }))
		{
			var views = new List<SelectListItem>() {
						new SelectListItem(){Text = "Thumbnails",Value = "thumbnails",Selected = !ViewBag.ShowTable},
						new SelectListItem(){Text = "Table", Value = "table", Selected = ViewBag.ShowTable}
					};
			ConferencesFilter filter;
			if (ViewBag.Filter != null)
			{
				filter = ViewBag.Filter as ConferencesFilter ?? new ConferencesFilter();
			}
			else
			{
				filter = new ConferencesFilter();
			}
			var sorts = new List<SelectListItem>()
						{
							new SelectListItem() {Text = "Start Date", Value = "startDate"},
							new SelectListItem() {Text = "Name", Value = "name"},
							new SelectListItem() {Text = "Call for Speakers Opening", Value = "callForSpeakersOpeningDate"},
							new SelectListItem() {Text = "Call for Speakers Closing", Value = "callForSpeakersClosingDate"},
							new SelectListItem() {Text = "Tickets on Sale Date", Value = "registrationOpens"},
							new SelectListItem() {Text = "Date Added", Value = "dateAdded"}
						};
			var sortBy = sorts.FirstOrDefault(x => x.Value == filter.sortBy);
			if (sortBy != null)
			{
				sortBy.Selected = true;
			}
			var viewAs = views.FirstOrDefault(x => x.Value == filter.viewAs);
			if (viewAs != null)
			{
				viewAs.Selected = true;
			}		  
					<div class="row">
						<div class="alert alert-success">
							<span class="badge badge-info">@Model.Count()</span> Conferences shown
						</div>
					</div>
					<div class="row">
						<div class="span2">
							<div class="control-group">
								<label class="control-label" for="viewAs">View As</label>
								<div class="controls">
									@Html.DropDownList("viewAs", views, new { @onchange = "this.form.submit();", style = "width:120px;" })
								</div>
							</div>
							<div class="control-group">
								<label class="control-label" for="sortBy">Sort By</label>
								<div class="controls">
									@Html.DropDownList("sortBy", sorts, new { @onchange = "this.form.submit();", style = "width:100px;" })
								</div>
							</div>


						</div>
						<div class="span4">
							<div class="control-group">
								<label class="control-label" for="city">City</label>
								<div class="controls">
									@Html.TextBox("city", filter.city, new { placeholder = "City" })
								</div>
							</div>
							<div class="control-group">
								<label class="control-label" for="state">State</label>
								<div class="controls">
									@Html.TextBox("state", filter.state, new { placeholder = "2 Letter State" })
								</div>
							</div>
							<div class="control-group">
								<label class="control-label" for="country">Country</label>
								<div class="controls">
									@Html.TextBox("country", filter.country, new { placeholder = "Country" })
								</div>
							</div>
							<div class="control-group">
								<label class="control-label" for="distance">Distance</label>
								<div class="controls">
									@Html.TextBox("distance", filter.distance, new { placeholder = "Distance (in miles). Default: 25" })
								</div>
							</div>
							<div class="control-group">
								<label class="control-label" for="latitude">Latitude</label>
								<div class="controls">
									@Html.TextBox("latitude", filter.latitude, new { placeholder = "Latitude" })
								</div>
							</div>
							<div class="control-group">
								<label class="control-label" for="longitude">Longitude</label>
								<div class="controls">
									@Html.TextBox("longitude", filter.longitude, new { placeholder = "Longitude" })
								</div>
							</div>
						</div>
						<div class="span5">
							@Html.TextBox("search", filter.search, new { @class = "span3", placeholder = "Search text" })
							<br />
							<br />
							<label class="checkbox">
								@Html.CheckBox("showPastConferences", filter.showPastConferences, new { @onchange = "this.form.submit();" }) Show Past Conferences?
							</label>
							<label class="checkbox">
								@Html.CheckBox("showOnlyOpenCalls", filter.showOnlyOpenCalls, new { @onchange = "this.form.submit();" }) Show Only Open Calls?
							</label>
							<label class="checkbox">
								@Html.CheckBox("showOnlyOnSale", filter.showOnlyOnSale, new { @onchange = "this.form.submit();" }) Show Only On Sale?
							</label>
						</div>
					</div>
					<div class="row">

						<div class="span10 pull-right" style="text-align: right">
							<button class="btn btn-primary btn-large" onclick="this.form.submit()" id="searchButton">Search</button>
						</div>

					</div>
		}

			</div>

			<div class="row">
				@if (ViewBag.ShowTable)
		{
					<div class="span12">
						<table class="table">
							<tbody>
								@foreach (var conference in Model)
				{
									<tr>
										<td><a href="~/Conferences/@conference.slug" class="btn btn-primary btn-mini">View Conference</a></td>
										<td>@conference.name</td>
										<td>@HtmlHelpers.FormatDateRange(conference.start, conference.end)</td>
										<td>@HtmlHelpers.FormatAddress(conference.address)</td>
									</tr>
				}
							</tbody>
						</table>
					</div>
		}
		else
		{
					<ul class="thumbnails">

						@if (Model != null)
			{
				try
				{
					foreach (var conference in Model)
					{

						<li class="span3">

							<div class="thumbnail" style="width: 280px; height: @(Request.IsAuthenticated ? "670px" : "650px"); position: relative;">
								@if (conference.IsOnSale())
				{
									<img src="~/img/OnSale.png" class="overlay overlay-onsale" alt="On Sale Now" />
				}
								<img src="@conference.imageUrl" alt="@conference.name">
								@if (conference.IsOpenCallForSpeakers())
				{
									<img src="~/img/OpenCall.png" class="overlay overlay-opencall overlay-right" alt="Open Call for Speakers" />
				}
								<div class="caption">
									<h3>@conference.name</h3>
									<h4>@HtmlHelpers.FormatDateRange(conference.start, conference.end)<br />@conference.address.City<text> </text>@conference.address.State @conference.address.Country</h4>

									<p><strong>@conference.numberOfSessions Sessions</strong></p>
									<p style="display: block; text-overflow: ellipsis; overflow: hidden; max-height: 240px; display: -webkit-box; -webkit-line-clamp: 11; -webkit-box-orient: vertical;">
										@conference.description
									</p>

									<div style="position: absolute; bottom: 10px;">
										<a href="~/Conferences/@conference.slug" class="btn btn-primary btn-block">View Conference</a>
										@if (Request.IsAuthenticated)
					{
						using (Html.BeginForm("Add", "Schedule", FormMethod.Post, new { id = conference.slug + "-form" }))
						{
							Html.AntiForgeryToken();
							var formName = conference.slug + "-form";
												@Html.Hidden("conferenceSlug", conference.slug)
												<a href="javascript:document.getElementById('@formName').submit()" class="btn btn-block">I'm Attending!</a>
						}
					}
									</div>
								</div>
							</div>
						</li>
					}



				}
				catch (Exception ex)
				{


				}

			}
					</ul>
		}



			</div>

		</div>
		<!-- /container -->


	</div>
	<!-- /subpage -->

	@Html.Partial("Extra")

	@Html.Partial("Footer")

	@Scripts.Render("~/bundles/jquery")
	@Scripts.Render("~/bundles/jqueryMigrate")
	@Scripts.Render("~/js/common")
	@Scripts.Render("~/bundles/jqueryUI")
	@Scripts.Render("~/js/conferences/index")

	<script type="text/javascript" language="javascript">
		$(function () {
			// run the currently selected effect
			function runEffect() {
				// get effect type from
				var selectedEffect = 'blind';

				// most effect types need no options passed by default
				var options = {};
				// some effects have required parameters
				if (selectedEffect === "scale") {
					options = { percent: 0 };
				} else if (selectedEffect === "size") {
					options = { to: { width: 200, height: 60 } };
				}

				// run the effect
				$("#filter").toggle(selectedEffect, options, 500, function () {
					var currentDisplay = $("#filter").css('display');
					$.cookie('searchFilterToggle', currentDisplay, { expires: 7 });
				});

			};

			// set effect from select menu value
			//$("#filter").hide();
			$(document).on("click", "#showFilter", function () {
				runEffect();
				return false;
			});

		});

		$(function () {
			var onLoadFilterDisplay = $.cookie('searchFilterToggle');

			if (onLoadFilterDisplay != "block") {
				$("#filter").hide();
			} else {
				$("#filter").show();
			}

			$("#search").autocomplete({
				messages: {
					noResults: null,
					results: function () { }
				},
				source: function (request, response) {
					$.ajax({
						url: '@(ConfigurationManager.AppSettings["BaseUrl"])/v1/conferences/search?searchTerm=' + request.term + '&showPastConferences=' + $('#showPastConferences').is(':checked') + '&format=json',
						dataType: "jsonp",
						data: request,
						success: function (data) {
							response($.map(data, function (item) {
								return {
									label: item.label,
									value: item.value
								}
							}));
						}
					});
				},
				minLength: 2,
				select: function (event, ui) {
					this.value = ui.item.value;
					$('#searchButton').click();
				},
				open: function () {
					$(this).removeClass("ui-corner-all").addClass("ui-corner-top");
				},
				close: function () {
					$(this).removeClass("ui-corner-top").addClass("ui-corner-all");
				}
			});


			$('#search').typeahead([
					{
						name: 'planets',
						local: ["Mercury", "Venus", "Earth", "Mars", "Jupiter", "Saturn", "Uranus", "Neptune"]
					}
			]);
		});
	</script>
</body>
</html>

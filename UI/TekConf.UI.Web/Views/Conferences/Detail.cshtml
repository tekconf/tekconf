@using System.Globalization
@using System.Web.Optimization
@using TekConf.UI.Web
@model TekConf.RemoteData.Dtos.v1.FullConferenceDto
@{
	Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8">

	<title>@Model.name - tekconf</title>
	<link rel="shortcut icon" type="image/x-icon" href="~/favicon.ico">
	<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
	<meta name="description" content="@Model.name Conference Schedule" />
	<meta name="apple-mobile-web-app-capable" content="yes">
	<link rel="search" type="application/opensearchdescription+xml" href="http://www.tekconf.com/TekConf.xml" title="TekConf Search" />

	<link href="http://fonts.googleapis.com/css?family=Open+Sans:400italic,600italic,400,600" rel="stylesheet" type="text/css">
	<link rel="search" type="application/opensearchdescription+xml" href="http://www.tekconf.com/TekConf.xml" title="TekConf Search" />
	@Styles.Render("~/css/conferences/detail")

	<!-- Le HTML5 shim, for IE6-8 support of HTML5 elements -->
	<!--[if lt IE 9]>
    <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->

	<!-- API NOTE : This page is generated by calling http://api.tekconf.com/v1/conferences/@Model.slug -->

</head>

<body>

	@Html.Partial("Header")

	<div id="subheader">
		<div class="inner">
			<div class="container">
				<h1>@Model.name</h1>
			</div>
			<!-- /.container -->
		</div>
		<!-- /inner -->
	</div>
	<!-- /subheader -->

	<div id="subpage">
		<div class="container">
			<div class="row">
				<div class="span3">
					<img src="@Model.imageUrl" alt="@Model.name">
				</div>
				<div class="span9">
					<div class="big-intro">
						@Model.tagline
					</div>
				</div>
				<!-- /span12 -->
			</div>
			<div class="row">
				<div class="span12">
					@Model.description
				</div>
			</div>
			<!-- /row -->

			<br />
			<div class="row">

				<div class="span8">
					@if (Model.sessions == null || !Model.sessions.Any())
		 {

						<div class="alert alert-block">
							No sessions to display. Either sessions have not been released, or sessions have not been added to TekConf.<br />
							Want to help add sessions? Contact <a href="mailto:robgibbens@arteksoftware.com">RobGibbens@arteksoftware.com</a>
						</div>

		 }
		 else
		 {
						<div class="alert alert-block">
							Note : TekConf is not the definitive list of sessions for this conference. Session details may not be up to date. Please 
				            check the <a href="@Model.homepageUrl">@Model.name site</a> for up to date information.
						</div>
		 }
					@{
						var sessionGroup = Model.sessions
																		.GroupBy(s => new { s.start.Year, s.start.Month, s.start.Day })
																		.Select(s => new { DateKey = s.Key, Sessions = s })
																		.ToList();
					}

					@foreach (var dayGroup in sessionGroup.OrderBy(s => s.DateKey.Year).ThenBy(s => s.DateKey.Month).ThenBy(s => s.DateKey.Day))
		 {
			 var date = DateTime.Parse(dayGroup.DateKey.Month + "/" + dayGroup.DateKey.Day + "/" + dayGroup.DateKey.Year);
			 var tabName = date.ToString("dddd, MMMM d", CultureInfo.CreateSpecificCulture("en-US")).Replace(" ", "").Replace(",", "");
			 var dateString = date.ToString("dddd, MMMM d", CultureInfo.CreateSpecificCulture("en-US"));

						<div class="row">
							<div class="span12">
								<h3>

									<span class="slash">//</span> @dateString
								</h3>
							</div>
							<!-- /span12 -->
							<table class="table">
								<tbody>
									@{
			 var sessionTimes = dayGroup.Sessions
																	.GroupBy(s => new { s.start })
																	.Select(s => new { DateKey = s.Key, Sessions = s })
																	.OrderBy(s => s.DateKey.start)
																	.ToList();
									}
									@foreach (var sessionTime in sessionTimes)
				 {
										<tr>
											<td colspan="3">@sessionTime.DateKey.start.ToShortTimeString()</td>
										</tr>
					 foreach (var session in sessionTime.Sessions.OrderBy(s => s.start.TimeOfDay))
					 {
                                
										<tr>
											@if (Request.IsAuthenticated)
					 {
						 if (session.isAddedToSchedule.HasValue && session.isAddedToSchedule.Value)
						 {
												<td style="width: 20px;">
													<i class="icon-star icon-2x icon-selected" id="remove-@session.slug" onclick="javascript:toggleSessionOnSchedule('@Model.slug', '@session.slug', '#remove-@session.slug')"></i>
												</td>
						 }
						 else
						 {
												<td style="width: 20px;">
													<i class="icon-star-empty icon-2x" id="add-@session.slug" onclick="javascript:toggleSessionOnSchedule('@Model.slug', '@session.slug', '#add-@session.slug')"></i>
												</td>																										
						 }
					 }

											<td>
												@Html.RouteLink(session.title, "SessionDetail", new { conferenceSlug = Model.slug, sessionSlug = session.slug }, null)
											</td>
											<td>
												@foreach (var speaker in session.speakers)
						{
													@Html.RouteLink(speaker.fullName, "SessionSpeakerDetail", new { conferenceSlug = Model.slug, speakerSlug = speaker.slug }, null)<br />
						}
											</td>
										</tr>                                
					 }
				 }
								</tbody>
							</table>
						</div>

		 }
				</div>
				<!-- /span6 -->

				<div class="span4">
					<div class="sidebar">
						<h4><span class="slash">//</span> More Information</h4>
						<p>
							@HtmlHelpers.FormatDateRange(Model.start, Model.end)<br />
							<br />
							@if (!string.IsNullOrWhiteSpace(Model.location))
			 {
								@Model.location<br />
			 }
							@if (Model.address != null)
			 {
				 if (Model.address.StreetNumber != 0)
				 {
								@Model.address.StreetNumber<text> </text>
				 }
				 if (!string.IsNullOrWhiteSpace(Model.address.StreetName))
				 {
								@Model.address.StreetName<br />
				 }
														
								@Model.address.City<text> </text>@Model.address.State<text> </text>@Model.address.Country<br />
								<br />
			 }


							@if (Model.callForSpeakersOpens != default(DateTime))
			 {
								<text>Call for Speakers : </text><br />
								@HtmlHelpers.FormatDateRange(Model.callForSpeakersOpens, Model.callForSpeakersCloses)
			 }
							<h4><span class="slash">//</span> Connect</h4>
							@if (!string.IsNullOrWhiteSpace(Model.homepageUrl))
			 {
								<img src="~/img/social/website-16x16.png" alt="Website" /> @HtmlHelpers.SimpleLink(Model.homepageUrl, Model.homepageUrl.Replace("http://", ""))<br />
			 }

							@if (!string.IsNullOrWhiteSpace(Model.twitterName))
			 {
								<img src="~/img/social/twitter-16x16.png" alt="Twitter Name" /> @HtmlHelpers.TwitterUserLink(Model.twitterName)<br />
			 }
							@if (!string.IsNullOrWhiteSpace(Model.twitterHashTag))
			 {
								<img src="~/img/social/twitter-16x16.png" alt="Twitter Hashtag" /> @HtmlHelpers.SimpleLink("https://twitter.com/#!/search/" + Model.twitterHashTag.Replace("#", "%23"), Model.twitterHashTag)<br />
			 }

							@if (!string.IsNullOrWhiteSpace(Model.facebookUrl))
			 {
								<img src="~/img/social/facebook-16x16.png" alt="Facebook" /> @HtmlHelpers.SimpleLink(Model.facebookUrl, "Facebook")<br />
			 }

							@if (!string.IsNullOrWhiteSpace(Model.lanyrdUrl))
			 {
								<img src="~/img/social/lanyrd-16x16.png" alt="Lanyrd" /> @HtmlHelpers.SimpleLink(Model.lanyrdUrl, "Lanyrd")<br />
			 }

							@if (!string.IsNullOrWhiteSpace(Model.meetupUrl))
			 {
								<img src="~/img/social/meetup-16x16.png" alt="Meetup" /> @HtmlHelpers.SimpleLink(Model.meetupUrl, "Meetup")<br />
			 }

							@if (!string.IsNullOrWhiteSpace(Model.googlePlusUrl))
			 {
								<img src="~/img/social/googlePlus-16x16.png" alt="Google Plus" /> @HtmlHelpers.SimpleLink(Model.googlePlusUrl, "Google+")<br />
			 }

							@if (!string.IsNullOrWhiteSpace(Model.vimeoUrl))
			 {
								<img src="~/img/social/vimeo-16x16.png" alt="Vimeo" /> @HtmlHelpers.SimpleLink(Model.vimeoUrl, "Vimeo")<br />
			 }

							@if (!string.IsNullOrWhiteSpace(Model.youtubeUrl))
			 {
								<img src="~/img/social/youtube-16x16.png" alt="Youtube" /> @HtmlHelpers.SimpleLink(Model.youtubeUrl, "YouTube")<br />
			 }

							@if (!string.IsNullOrWhiteSpace(Model.githubUrl))
			 {
								<img src="~/img/social/github-16x16.png" alt="GitHub" /> @HtmlHelpers.SimpleLink(Model.googlePlusUrl, "Github")<br />
			 }

							@if (!string.IsNullOrWhiteSpace(Model.linkedInUrl))
			 {
								<img src="~/img/social/linkedin-16x16.png" alt="LinkedIn" /> @HtmlHelpers.SimpleLink(Model.linkedInUrl, "LinkedIn")<br />
			 }
						</p>
						@if (Html.IsAdmin())
			{
							@Html.RouteLink("Edit Conference", "AdminEditConference", new { conferenceSlug = Model.slug }, new { @class = "btn btn-info" })	
							@Html.RouteLink("Add Session", "AdminAddSession", new { conferenceSlug = Model.slug }, new { @class = "btn" })	
			}
						<br />
					</div>
					<!-- /sidebar -->
				</div>
				<!-- /span4 -->


			</div>
			<!-- /row -->

			<br />
			<br />

			<div class="row">
			</div>
			<!-- /row -->

		</div>
		<!-- /container -->

	</div>
	<!-- /subpage -->

	@Html.Partial("Extra")

	@Html.Partial("Footer")

	@Scripts.Render("~/bundles/jquery")
	@Scripts.Render("~/bundles/jqueryMigrate")
	@Scripts.Render("~/js/common")
	@Scripts.Render("~/bundles/jqueryUI")

	<script>
		function toggleSessionOnSchedule(conferenceSlug, sessionSlug, element) {
			if ($(element).hasClass("icon-star")) {
				removeSessionFromSchedule(conferenceSlug, sessionSlug, element);
			} else if ($(element).hasClass("icon-star-empty")) {
				addSessionToSchedule(conferenceSlug, sessionSlug, element);
			}
		}

		function removeSessionFromSchedule(conferenceSlug, sessionSlug, element) {
			$(element).removeClass("icon-star").removeClass("icon-selected").addClass("icon-exchange");
			var jqxhr = $.post("@Url.Action("Delete", "Schedule")", { conferenceSlug: conferenceSlug, sessionSlug: sessionSlug }, function () {
    		})
						.done(function () {
							$(element).removeClass("icon-star").removeClass("icon-selected").removeClass("icon-exchange").addClass("icon-star-empty");
						})
						.fail(function () { alert("error"); })
						.always(function () {
							$(element).removeClass("icon-exchange");
						});
			}

			function addSessionToSchedule(conferenceSlug, sessionSlug, element) {
				$(element).removeClass("icon-star-empty").addClass("icon-exchange");
				var jqxhr = $.post("@Url.Action("Add", "Schedule")", { conferenceSlug: conferenceSlug, sessionSlug: sessionSlug }, function () {
						})
						.done(function () {
							$(element).removeClass("icon-star-empty").removeClass("icon-exchange").addClass("icon-star").addClass("icon-selected");
						})
						.fail(function () { alert("error"); })
						.always(function () {
							$(element).removeClass("icon-exchange");
						});
					}
	</script>
</body>
</html>
